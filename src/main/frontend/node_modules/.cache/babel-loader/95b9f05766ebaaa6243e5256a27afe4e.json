{"ast":null,"code":"var _jsxFileName = \"/Users/nagesh/Documents/camunda/workarea/latest/sample-poc/src/main/frontend/src/WorkflowList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavBar from './AppNavBar';\nimport { Link, withRouter } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WorkflowList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      closedworkflows: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/workflow/closedwf').then(response => response.json()).then(data => this.setState({\n      closedworkflows: data\n    }));\n  }\n\n  render() {\n    const {\n      closedworkflows,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    }\n\n    const closedworkflowList = closedworkflows.map(closedworkflows => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: closedworkflows.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          children: closedworkflows.workflowtype\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: closedworkflows.tradecenter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: closedworkflows.branchcode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: closedworkflows.refid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: closedworkflows.queue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: closedworkflows.productcode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [closedworkflows.currency, closedworkflows.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: closedworkflows.closuretype\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, closedworkflows.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Won ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Workflow Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Trade Center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Branch Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Ref ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Queue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Product Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Event Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Transaction Amt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Closure Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: closedworkflowList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WorkflowList;","map":{"version":3,"sources":["/Users/nagesh/Documents/camunda/workarea/latest/sample-poc/src/main/frontend/src/WorkflowList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavBar","Link","withRouter","Modal","WorkflowList","constructor","props","state","closedworkflows","componentDidMount","fetch","then","response","json","data","setState","render","isLoading","closedworkflowList","map","id","whiteSpace","workflowtype","tradecenter","branchcode","refid","queue","productcode","currency","amount","closuretype"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavBar from './AppNavBar';\nimport { Link, withRouter } from 'react-router-dom';\nimport Modal from 'react-modal';\n\nclass WorkflowList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            closedworkflows: []\n        };\n    }\n\n    componentDidMount() {\n            fetch('/workflow/closedwf')\n            .then(response => response.json())\n            .then(data => this.setState({closedworkflows: data}));\n    }\n \n    \n    render() {\n        const {closedworkflows, isLoading} = this.state;\n    \n        if (isLoading) {\n            return <p>Loading...</p>;\n        }\n    \n        \n\n        const closedworkflowList = closedworkflows.map(closedworkflows => {\n            return <tr key={closedworkflows.id}>\n                <td>{closedworkflows.id}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{closedworkflows.workflowtype}</td>\n                <td>{closedworkflows.tradecenter}</td>\n                <td>{closedworkflows.branchcode}</td>\n                <td>{closedworkflows.refid}</td>\n                <td>{closedworkflows.queue}</td>\n                <td>{closedworkflows.productcode}</td>\n                <td>{closedworkflows.currency}{closedworkflows.amount}</td>\n                <td>{closedworkflows.closuretype}</td>\n            </tr>\n        });\n    \n        return (\n            <div>\n                <Container fluid>\n                    <br/>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"10%\">Won ID</th>\n                            <th width=\"10%\">Workflow Type</th>\n                            <th width=\"10%\">Trade Center</th>\n                            <th width=\"10%\">Branch Code</th>\n                            <th width=\"10%\">Ref ID</th>\n                            <th width=\"10%\">Queue</th>\n                            <th width=\"10%\">Product Code</th>\n                            <th width=\"10%\">Event Type</th>\n                            <th width=\"10%\">Transaction Amt</th>\n                            <th width=\"10%\">Closure Type</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {closedworkflowList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\n\nexport default WorkflowList;"]},"metadata":{},"sourceType":"module"}