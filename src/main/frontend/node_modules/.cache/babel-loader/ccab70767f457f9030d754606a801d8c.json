{"ast":null,"code":"var _jsxFileName = \"/Users/nagesh/Documents/camunda/workarea/sample-project/src/main/frontend/src/WorkflowList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavBar from './AppNavBar';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WorkflowList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workflows: []\n    };\n    this.remove = this.remove.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/clients').then(response => response.json()).then(data => this.setState({\n      clients: data\n    }));\n  }\n\n  async remove(id) {\n    await fetch(`/clients/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      let updatedClients = [...this.state.clients].filter(i => i.id !== id);\n      this.setState({\n        clients: updatedClients\n      });\n    });\n  }\n\n  render() {\n    const {\n      clients,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this);\n    }\n\n    const clientList = clients.map(client => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          children: client.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: client.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              color: \"primary\",\n              tag: Link,\n              to: \"/clients/\" + client.id,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              color: \"danger\",\n              onClick: () => this.remove(client.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, client.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"float-right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            tag: Link,\n            to: \"/clients/new\",\n            children: \"Add Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"30%\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"30%\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"40%\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: clientList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ClientList;","map":{"version":3,"sources":["/Users/nagesh/Documents/camunda/workarea/sample-project/src/main/frontend/src/WorkflowList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavBar","Link","WorkflowList","constructor","props","state","workflows","remove","bind","componentDidMount","fetch","then","response","json","data","setState","clients","id","method","headers","updatedClients","filter","i","render","isLoading","clientList","map","client","whiteSpace","name","email","ClientList"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,SAA9B,EAAyCC,KAAzC,QAAsD,YAAtD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAEjCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAb;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,UAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACC,MAAAA,OAAO,EAAEF;AAAV,KAAd,CAFlB;AAGH;;AAEW,QAANP,MAAM,CAACU,EAAD,EAAK;AACb,UAAMP,KAAK,CAAE,YAAWO,EAAG,EAAhB,EAAmB;AAC1BC,MAAAA,MAAM,EAAE,QADkB;AAE1BC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAFiB,KAAnB,CAAL,CAMHR,IANG,CAME,MAAM;AACV,UAAIS,cAAc,GAAG,CAAC,GAAG,KAAKf,KAAL,CAAWW,OAAf,EAAwBK,MAAxB,CAA+BC,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASA,EAA7C,CAArB;AACA,WAAKF,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAEI;AAAV,OAAd;AACH,KATK,CAAN;AAUH;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAACP,MAAAA,OAAD;AAAUQ,MAAAA;AAAV,QAAuB,KAAKnB,KAAlC;;AAEA,QAAImB,SAAJ,EAAe;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,UAAMC,UAAU,GAAGT,OAAO,CAACU,GAAR,CAAYC,MAAM,IAAI;AACrC,0BAAO;AAAA,gCACH;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAE;AAAb,WAAX;AAAA,oBAAoCD,MAAM,CAACE;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADG,eAEH;AAAA,oBAAKF,MAAM,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFG,eAGH;AAAA,iCACI,QAAC,WAAD;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,IAAb;AAAkB,cAAA,KAAK,EAAC,SAAxB;AAAkC,cAAA,GAAG,EAAE7B,IAAvC;AAA6C,cAAA,EAAE,EAAE,cAAc0B,MAAM,CAACV,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,IAAb;AAAkB,cAAA,KAAK,EAAC,QAAxB;AAAiC,cAAA,OAAO,EAAE,MAAM,KAAKV,MAAL,CAAYoB,MAAM,CAACV,EAAnB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHG;AAAA,SAASU,MAAM,CAACV,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AAUH,KAXkB,CAAnB;AAaA,wBACI;AAAA,8BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,GAAG,EAAEhB,IAA7B;AAAmC,YAAA,EAAE,EAAC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,MAAjB;AAAA,kCACI;AAAA,mCACA;AAAA,sCACI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AAAA,sBACCwB;AADD;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AAtEgC;;AA0ErC,eAAeM,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavBar from './AppNavBar';\nimport { Link } from 'react-router-dom';\n\nclass WorkflowList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {workflows: []};\n        this.remove = this.remove.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('/clients')\n            .then(response => response.json())\n            .then(data => this.setState({clients: data}));\n    }\n\n    async remove(id) {\n        await fetch(`/clients/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(() => {\n            let updatedClients = [...this.state.clients].filter(i => i.id !== id);\n            this.setState({clients: updatedClients});\n        });\n    }\n    \n    render() {\n        const {clients, isLoading} = this.state;\n    \n        if (isLoading) {\n            return <p>Loading...</p>;\n        }\n    \n        const clientList = clients.map(client => {\n            return <tr key={client.id}>\n                <td style={{whiteSpace: 'nowrap'}}>{client.name}</td>\n                <td>{client.email}</td>\n                <td>\n                    <ButtonGroup>\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/clients/\" + client.id}>Edit</Button>\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(client.id)}>Delete</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n    \n        return (\n            <div>\n                <AppNavBar/>\n                <Container fluid>\n                    <div className=\"float-right\">\n                        <Button color=\"success\" tag={Link} to=\"/clients/new\">Add Client</Button>\n                    </div>\n                    <h3>Clients</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"30%\">Name</th>\n                            <th width=\"30%\">Email</th>\n                            <th width=\"40%\">Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {clientList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\n\nexport default ClientList;"]},"metadata":{},"sourceType":"module"}