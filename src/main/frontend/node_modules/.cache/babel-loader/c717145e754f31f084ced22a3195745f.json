{"ast":null,"code":"var _jsxFileName = \"/Users/nagesh/Documents/camunda/workarea/latest/sample-poc/src/main/frontend/src/PendingWFList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PendingWFList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workflows: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/workflow').then(response => response.json()).then(data => this.setState({\n      workflows: data\n    }));\n  }\n\n  render() {\n    const {\n      workflows,\n      reviewworkflows,\n      closedworkflows,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this);\n    }\n\n    const workflowList = workflows.map(workflows => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: workflows.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          children: workflows.workflowtype\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: workflows.tradecenter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: workflows.branchcode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: workflows.refid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: workflows.queue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: workflows.productcode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [workflows.currency, workflows.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: workflows.closuretype\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              color: \"primary\",\n              href: \"/workflow/\" + workflows.id,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              color: \"danger\",\n              href: \"/workflow/close/\" + workflows.id,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, workflows.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Won ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Workflow Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Trade Center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Branch Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Ref ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Queue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Product Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Event Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Transaction Amt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Closure Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: workflowList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PendingWFList;","map":{"version":3,"sources":["/Users/nagesh/Documents/camunda/workarea/latest/sample-poc/src/main/frontend/src/PendingWFList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","PendingWFList","constructor","props","state","workflows","componentDidMount","fetch","then","response","json","data","setState","render","reviewworkflows","closedworkflows","isLoading","workflowList","map","id","whiteSpace","workflowtype","tradecenter","branchcode","refid","queue","productcode","currency","amount","closuretype"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\n\nclass PendingWFList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            workflows: []\n        };\n    }\n\n    componentDidMount() {\n        fetch('/workflow')\n            .then(response => response.json())\n            .then(data => this.setState({workflows: data}));\n    }\n \n    \n    render() {\n        const {workflows, reviewworkflows, closedworkflows, isLoading} = this.state;\n    \n        if (isLoading) {\n            return <p>Loading...</p>;\n        }\n    \n        const workflowList = workflows.map(workflows => {\n            return <tr key={workflows.id}>\n                <td>{workflows.id}</td>\n                <td style={{whiteSpace: 'nowrap'}}>{workflows.workflowtype}</td>\n                <td>{workflows.tradecenter}</td>\n                <td>{workflows.branchcode}</td>\n                <td>{workflows.refid}</td>\n                <td>{workflows.queue}</td>\n                <td>{workflows.productcode}</td>\n                <td>{workflows.currency}{workflows.amount}</td>\n                <td>{workflows.closuretype}</td>\n                <td>\n                    <ButtonGroup>\n                        <Button size=\"sm\" color=\"primary\" href={\"/workflow/\" + workflows.id}>Edit</Button>\n                        <Button size=\"sm\" color=\"danger\" href={\"/workflow/close/\" + workflows.id}>Close</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n    \n        return (\n            <div>\n                <Container fluid>\n                    <br/>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"10%\">Won ID</th>\n                            <th width=\"10%\">Workflow Type</th>\n                            <th width=\"10%\">Trade Center</th>\n                            <th width=\"10%\">Branch Code</th>\n                            <th width=\"10%\">Ref ID</th>\n                            <th width=\"10%\">Queue</th>\n                            <th width=\"10%\">Product Code</th>\n                            <th width=\"10%\">Event Type</th>\n                            <th width=\"10%\">Transaction Amt</th>\n                            <th width=\"10%\">Closure Type</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {workflowList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\n\nexport default PendingWFList;"]},"metadata":{},"sourceType":"module"}